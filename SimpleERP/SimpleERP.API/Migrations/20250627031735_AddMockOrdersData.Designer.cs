// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleERP.API.Data;

#nullable disable

namespace SimpleERP.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250627031735_AddMockOrdersData")]
    partial class AddMockOrdersData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleERP.API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 100,
                            DeliveredDate = new DateTime(2024, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Notes = "Priority delivery requested",
                            OrderDate = new DateTime(2024, 11, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            OrderNumber = "ORD202412001",
                            ShippedDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShippingAddress = "123 Main St, Tech City, TC 12345",
                            Status = "Delivered",
                            TotalAmount = 1649.98m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 101,
                            Notes = "Office setup order",
                            OrderDate = new DateTime(2024, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            OrderNumber = "ORD202412002",
                            ShippedDate = new DateTime(2024, 11, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShippingAddress = "456 Business Ave, Corporate City, CC 67890",
                            Status = "Shipped",
                            TotalAmount = 899.98m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 102,
                            Notes = "Home office upgrade",
                            OrderDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            OrderNumber = "ORD202412003",
                            ShippingAddress = "789 Developer Rd, Code City, CD 54321",
                            Status = "Processing",
                            TotalAmount = 799.98m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 100,
                            Notes = "Additional equipment",
                            OrderDate = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            OrderNumber = "ORD202412004",
                            ShippingAddress = "123 Main St, Tech City, TC 12345",
                            Status = "Pending",
                            TotalAmount = 349.98m
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 101,
                            Notes = "New team member setup",
                            OrderDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            OrderNumber = "ORD202412005",
                            ShippingAddress = "456 Business Ave, Corporate City, CC 67890",
                            Status = "Processing",
                            TotalAmount = 1299.99m
                        });
                });

            modelBuilder.Entity("SimpleERP.API.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1,
                            TotalPrice = 1299.99m,
                            UnitPrice = 1299.99m
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 7,
                            TotalPrice = 349.93m,
                            UnitPrice = 49.99m
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            ProductId = 2,
                            Quantity = 1,
                            TotalPrice = 299.99m,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 2,
                            ProductId = 4,
                            Quantity = 1,
                            TotalPrice = 599.99m,
                            UnitPrice = 599.99m
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 3,
                            ProductId = 5,
                            Quantity = 2,
                            TotalPrice = 799.98m,
                            UnitPrice = 399.99m
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 4,
                            ProductId = 2,
                            Quantity = 1,
                            TotalPrice = 299.99m,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 7,
                            OrderId = 4,
                            ProductId = 3,
                            Quantity = 1,
                            TotalPrice = 49.99m,
                            UnitPrice = 49.99m
                        },
                        new
                        {
                            Id = 8,
                            OrderId = 5,
                            ProductId = 1,
                            Quantity = 1,
                            TotalPrice = 1299.99m,
                            UnitPrice = 1299.99m
                        });
                });

            modelBuilder.Entity("SimpleERP.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "High-performance business laptop",
                            IsActive = true,
                            Name = "Laptop Computer",
                            Price = 1299.99m,
                            SKU = "LAP001",
                            StockQuantity = 25,
                            UpdatedAt = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Category = "Furniture",
                            CreatedAt = new DateTime(2024, 11, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Ergonomic office chair with lumbar support",
                            IsActive = true,
                            Name = "Office Chair",
                            Price = 299.99m,
                            SKU = "CHR001",
                            StockQuantity = 50,
                            UpdatedAt = new DateTime(2024, 11, 28, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Bluetooth wireless mouse with precision tracking",
                            IsActive = true,
                            Name = "Wireless Mouse",
                            Price = 49.99m,
                            SKU = "MOU001",
                            StockQuantity = 100,
                            UpdatedAt = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Category = "Furniture",
                            CreatedAt = new DateTime(2024, 11, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Adjustable height standing desk",
                            IsActive = true,
                            Name = "Standing Desk",
                            Price = 599.99m,
                            SKU = "DSK001",
                            StockQuantity = 15,
                            UpdatedAt = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2024, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "4K Ultra HD monitor for professionals",
                            IsActive = true,
                            Name = "Monitor 24 inch",
                            Price = 399.99m,
                            SKU = "MON001",
                            StockQuantity = 30,
                            UpdatedAt = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("SimpleERP.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CreatedAt = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "john@example.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$mock.hash.for.testing.purposes.only",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 101,
                            CreatedAt = new DateTime(2024, 11, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "jane@example.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$mock.hash.for.testing.purposes.only",
                            Username = "jane_smith"
                        },
                        new
                        {
                            Id = 102,
                            CreatedAt = new DateTime(2024, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "bob@example.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$mock.hash.for.testing.purposes.only",
                            Username = "bob_wilson"
                        });
                });

            modelBuilder.Entity("SimpleERP.API.Models.OrderItem", b =>
                {
                    b.HasOne("SimpleERP.API.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleERP.API.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SimpleERP.API.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SimpleERP.API.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
